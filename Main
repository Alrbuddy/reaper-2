local SolarisLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Stebulous/solaris-ui-lib/main/source.lua"))()


local win = SolarisLib:New({
  Name = "Reaper 2",
  FolderToSave = ""
})

--win:Tab(title <string>)
local tab = win:Tab("Home")

--tab:Section(title <string>)
local sec = tab:Section("Main")

local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

local Mobs = {}
for i,v in pairs(game:GetService("Workspace").Living:GetChildren()) do
if v:IsA"Model" and v.Parent.Name == "Living" then
local playerFound = false
for i, player in pairs(game.Players:GetPlayers()) do
if player.Name == v.Name then
playerFound = true
break
end
end
if not playerFound and not table.find(Mobs,tostring(v)) then
    table.insert(Mobs,tostring(v))
end
end
end

table.sort(Mobs)

multidropdown = sec:MultiDropdown("Select Mobs", Mobs, {}, "Dropdown", function(t)
  selectedMobs = t
  end)


  local function getNPC(mobName)
    local dist, thing = math.huge
    for i,v in pairs(game:GetService("Workspace").Living:GetChildren()) do
        if v:IsA("Model") and v.Name == mobName then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then 
                dist = mag 
                thing = v 
            end
        end
    end
    return thing
end


local toggle = sec:Toggle("Auto Farm Mobs", false,"Toggle", function(t)
    autofarm = t
    while autofarm do
    wait(0)
    for i, mobName in pairs(selectedMobs) do
    pcall(function()
    local NPC = getNPC(mobName)
    local lp = game.Players.LocalPlayer
    local dis2 = distance
    repeat wait()
    local newPos = NPC.HumanoidRootPart.Position - NPC.HumanoidRootPart.CFrame.lookVector * dis2
    lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC.HumanoidRootPart.Position)

    local args = {
        [1] = {
            ["inputType"] = Enum.UserInputType.MouseButton1,
            ["keyCode"] = Enum.KeyCode.Unknown
        }
    }

    if NPC.Status.Blocking.Value == false then
    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
else
    local args = {
        [1] = {
            ["inputType"] = Enum.UserInputType.MouseButton2,
            ["keyCode"] = Enum.KeyCode.Unknown
        }
    }
    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
  end


  until NPC.Humanoid.Health <= 0 or autofarm == false
end)
wait()
end
end
end)


local slider = sec:Slider("Distance", 5,13,7,0.1,"Slider", function(t)
  distance = t
end)

local sec10 = tab:Section("Dangai Autofarm (be in dangai)")

local toggle = sec10:Toggle("Dangai Farm", false,"Toggle", function(t)
    autofarm22 = t
    while autofarm22 do
    local NPC = game:GetService("Workspace").Living["Dangai Master"]
    local lp = game.Players.LocalPlayer
    local dis2 = distance
    repeat wait()
    local newPos = NPC.HumanoidRootPart.Position - NPC.HumanoidRootPart.CFrame.lookVector * 6.75
    lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC.HumanoidRootPart.Position)
    local args = {
        [1] = {
            ["inputType"] = Enum.UserInputType.MouseButton1,
            ["keyCode"] = Enum.KeyCode.Unknown
        }
    }
    
    if NPC.Status.Blocking.Value == false then
    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
else
    local args = {
    [1] = {
    ["inputType"] = Enum.UserInputType.MouseButton2,
    ["keyCode"] = Enum.KeyCode.Unknown
    }
    }
    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
    end
    
    until NPC.Humanoid.Health <= 0 or autofarm22 == false
    wait()
    end
    end)    

local tab2 = win:Tab("Quests")

--tab:Section(title <string>)
local sec2 = tab2:Section("Quests")

local dropdown = sec2:Dropdown("Quests", {"Acquired Taste | 10+","Hueco Mundo Hunt | 15+","Test Of Might | 15+"},"","Dropdown", function(t)
  getgenv().quest = t
end)

local toggle = sec2:Toggle("AutoQuest", false,"Toggle", function(a)
    a2 = a
    while a2 do task.wait(0.1)   
        pcall(function()  
            if quest == "Acquired Taste | 10+" then
                local args = {
                    [1] = "Acquired Taste",
                    [2] = workspace.NPCs.FireFlare96
                }
  
                game:GetService("ReplicatedStorage").Remotes.TakeQuest:FireServer(unpack(args))
                local objectives = game:GetService("Players")["LocalPlayer"].PlayerGui.HUD.QuestsFrame2["Acquired Taste"].Frame.Objective.Text
                for _, enemy in pairs(workspace.Living:GetChildren()) do
                    local enemyName = enemy.Name
                    local obj = objectives:match("Kill [^ ]+ " .. enemyName)
                    if obj then
                        local count = tonumber(obj:match("Kill ([^ ]+) "))
                        if count > 0 then
                            local NPC2 = enemy
                            local lp = game.Players.LocalPlayer
                            repeat task.wait()
                                local dis2 = distance
                                local newPos = NPC2.HumanoidRootPart.Position - NPC2.HumanoidRootPart.CFrame.lookVector * dis2
                                lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC2.HumanoidRootPart.Position)
                                local args = {
                                    [1] = {
                                        ["inputType"] = Enum.UserInputType.MouseButton1,
                                        ["keyCode"] = Enum.KeyCode.Unknown
                                    }
                                }

                                if NPC2.Status.Blocking.Value == false then
                                  game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                else
                                  local args = {
                                      [1] = {
                                          ["inputType"] = Enum.UserInputType.MouseButton2,
                                          ["keyCode"] = Enum.KeyCode.Unknown
                                      }
                                  }
                                  game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                end
                                if lp.Status.Weapon.Value == nil then
                                    local args = {
                                        [1] = {
                                            ["inputType"] = Enum.UserInputType.MouseButton2,
                                            ["keyCode"] = Enum.KeyCode.Unknown
                                        }
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                elseif NPC2.Status.Blocking.Value == true then
                                  print("blocking")
                                  local args = {
                                      [1] = {
                                          ["inputType"] = Enum.UserInputType.Keyboard,
                                          ["keyCode"] = Enum.KeyCode.R
                                      }
                                  }
              
                                  game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                
                              end
                              
                            until not lp.Character.HumanoidRootPart.Position:Distance(NPC2.HumanoidRootPart.Position) < dis2 + 0.1 or count == 0
                        end
                    end
                end
                  elseif quest == "Test Of Might | 15+" then
                      local args = {
                          [1] = "Test Of Might",
                          [2] = workspace:WaitForChild("NPCs"):WaitForChild("Roball1")
                      }
                      
                      game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("TakeQuest"):FireServer(unpack(args))
                      local objectives = game:GetService("Players")["LocalPlayer"].PlayerGui.HUD.QuestsFrame2["Test Of Might"].Frame.Objective.Text
                      for _, enemy in pairs(workspace.Living:GetChildren()) do
                          if enemy.Name == "Corrupted Shikai User" or enemy.Name == "Experienced Corrupted Shikai User" or enemy.Name == "Winged Hollow" then
                              if objectives:find(enemy.Name) then
                                  local NPC2 = enemy
                                  local lp = game.Players.LocalPlayer
                                  repeat wait()
                                      local dis2 = distance
                                      local newPos = NPC2.HumanoidRootPart.Position - NPC2.HumanoidRootPart.CFrame.lookVector * dis2
                                      lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC2.HumanoidRootPart.Position)
                                      local args = {
                                        [1] = {
                                            ["inputType"] = Enum.UserInputType.MouseButton1,
                                            ["keyCode"] = Enum.KeyCode.Unknown
                                        }
                                    }
  
                                    if NPC2.Status.Blocking.Value == false then
                                      game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    else
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.MouseButton2,
                                                ["keyCode"] = Enum.KeyCode.Unknown
                                            }
                                        }
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    end
                                    if lp.Status.Weapon.Value == nil then
                                      local args = {
                                          [1] = {
                                              ["inputType"] = Enum.UserInputType.Keyboard,
                                              ["keyCode"] = Enum.KeyCode.E
                                          }
                                      }
                      
                                      game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    elseif NPC2.Status.Blocking.Value == true then
                                      print("blocking")
                                      local args = {
                                          [1] = {
                                              ["inputType"] = Enum.UserInputType.Keyboard,
                                              ["keyCode"] = Enum.KeyCode.R
                                          }
                                      }
                  
                                      game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    end
                                    
                                  until not lp.Character.HumanoidRootPart.Position:Distance(NPC2.HumanoidRootPart.Position) < dis2 + 0.1
                              end
                          end
                      end

                      ------------------------------------ NO WAY I MANAGED TO PULL THIS OFF LOL, START WITH ENHANCED ARRANCAR AND FARM IT UNTIL IT'S DONE THEN CHECKS FOR THE REST OF THE ENEMIES LOL-----------------------------
                elseif quest == "Hueco Mundo Hunt | 15+" then
                    local args = {
                        [1] = "Hueco Mundo Hunt",
                        [2] = workspace.NPCs.CelestialMystical
                    }
                
                    game:GetService("ReplicatedStorage").Remotes.TakeQuest:FireServer(unpack(args))
                
                    local objectives2 = game:GetService("Players")["LocalPlayer"].PlayerGui.HUD.QuestsFrame2["Hueco Mundo Hunt"].Frame.Objective.Text
                    local remainingCount = 0
                
                    for _, enemy in pairs(workspace.Living:GetChildren()) do
                        local enemyName = enemy.Name
                        if enemy.Name == "Enhanced Arrancar" then
                            if objectives2:find(enemy.Name) then
                            local obj2 = objectives2:match("Kill [^ ]+ " .. enemyName)
                            if obj2 then
                                local count = tonumber(obj2:match("Kill ([^ ]+) "))
                                remainingCount = remainingCount + count
                                if count > 0 then
                                    local NPC2 = enemy
                                    local lp = game.Players.LocalPlayer
                                    repeat task.wait()
                                        local dis2 = distance
                                        local newPos = NPC2.HumanoidRootPart.Position - NPC2.HumanoidRootPart.CFrame.lookVector * dis2
                                        lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC2.HumanoidRootPart.Position)
                                        local args = {
                                          [1] = {
                                              ["inputType"] = Enum.UserInputType.MouseButton1,
                                              ["keyCode"] = Enum.KeyCode.Unknown
                                          }
                                      }
                
                                      if NPC2.Status.Blocking.Value == false then
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                      else
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.MouseButton2,
                                                ["keyCode"] = Enum.KeyCode.Unknown
                                            }
                                        }
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                      end
                                      if lp.Status.Weapon.Value == nil then
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.Keyboard,
                                                ["keyCode"] = Enum.KeyCode.E
                                            }
                                        }
                
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                      elseif NPC2.Status.Blocking.Value == true then
                                        print("blocking")
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.Keyboard,
                                                ["keyCode"] = Enum.KeyCode.R
                                            }
                                        }
                
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                
                                      end
                
                                      count = count - 1
                                      remainingCount = remainingCount - 1
                
                                    until not lp.Character.HumanoidRootPart.Position:Distance(NPC2.HumanoidRootPart.Position) < dis2 + 0.1 or count == 0
                                end
                            end
                        end
                    for _, enemy in pairs(workspace.Living:GetChildren()) do
                        local enemyName = enemy.Name
                        if enemyName ~= "Enhanced Arrancar" then
                            local obj2 = objectives2:match("Kill [^ ]+ " .. enemyName)
                            if obj2 then
                                local count = tonumber(obj2:match("Kill ([^ ]+) "))
                                remainingCount = remainingCount + count
                                if count > 0 then
                                    local NPC2 = enemy
                                    local lp = game.Players.LocalPlayer
                                    repeat task.wait()
                                        local dis2 = distance
                                        local newPos = NPC2.HumanoidRootPart.Position - NPC2.HumanoidRootPart.CFrame.lookVector * dis2
                                        lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC2.HumanoidRootPart.Position)
                                        local args = {
                                        [1] = {
                                            ["inputType"] = Enum.UserInputType.MouseButton1,
                                            ["keyCode"] = Enum.KeyCode.Unknown
                                        }
                                    }

                                    if NPC2.Status.Blocking.Value == false then
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    else
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.MouseButton2,
                                                ["keyCode"] = Enum.KeyCode.Unknown
                                            }
                                        }
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    end
                                    if lp.Status.Weapon.Value == nil then
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.Keyboard,
                                                ["keyCode"] = Enum.KeyCode.E
                                            }
                                        }

                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    elseif NPC2.Status.Blocking.Value == true then
                                        print("blocking")
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.Keyboard,
                                                ["keyCode"] = Enum.KeyCode.R
                                            }
                                        }

                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))

                                    end

                                    count = count - 1
                                    remainingCount = remainingCount - 1

                            until not lp.Character.HumanoidRootPart.Position:Distance(NPC2.HumanoidRootPart.Position) < dis2 + 0.1 or count == 0
                        end
                    end
                end
            end
        end
    end
end
end)
end
end)


  local sec3 = tab2:Section("Daily Quests")

  local dropdown = sec3:Dropdown("Daily Quests", {"Mass Cleansing | 5+","lazarovip2's Quest 10+ | Kill 10 Hollows in 300 seconds"},"","Dropdown", function(t)
    getgenv().quest2 = t
  end)
  
  local toggle = sec3:Toggle("AutoDailyQuest", false,"Toggle", function(a)
      a3 = a
      while a3 do task.wait(0.1)   
          pcall(function()  
              if quest2 == "Mass Cleansing | 5+" then
                local args = {
                    [1] = "Mass Cleansing",
                    [2] = workspace:WaitForChild("NPCs"):WaitForChild("EtherealMiracle")
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("TakeQuest"):FireServer(unpack(args))
                
                  local objectives = game:GetService("Players")["LocalPlayer"].PlayerGui.HUD.QuestsFrame2["Mass Cleansing"].Frame.Objective.Text
                  for _, enemy in pairs(workspace.Living:GetChildren()) do
                      local enemyName = enemy.Name
                      local obj = objectives:match("Kill [^ ]+ " .. enemyName)
                      if obj then
                          local count = tonumber(obj:match("Kill ([^ ]+) "))
                          if count > 0 then
                              local NPC2 = enemy
                              local lp = game.Players.LocalPlayer
                              repeat task.wait()
                                  local dis2 = distance
                                  local newPos = NPC2.HumanoidRootPart.Position - NPC2.HumanoidRootPart.CFrame.lookVector * dis2
                                  lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC2.HumanoidRootPart.Position)
                                  local args = {
                                      [1] = {
                                          ["inputType"] = Enum.UserInputType.MouseButton1,
                                          ["keyCode"] = Enum.KeyCode.Unknown
                                      }
                                  }
  
                                  if NPC2.Status.Blocking.Value == false then
                                    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                  else
                                    local args = {
                                        [1] = {
                                            ["inputType"] = Enum.UserInputType.MouseButton2,
                                            ["keyCode"] = Enum.KeyCode.Unknown
                                        }
                                    }
                                    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                  end
                                  if lp.Status.Weapon.Value == nil then
                                      local args = {
                                          [1] = {
                                              ["inputType"] = Enum.UserInputType.MouseButton2,
                                              ["keyCode"] = Enum.KeyCode.Unknown
                                          }
                                      }
                                      game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                  elseif NPC2.Status.Blocking.Value == true then
                                    print("blocking")
                                    local args = {
                                        [1] = {
                                            ["inputType"] = Enum.UserInputType.Keyboard,
                                            ["keyCode"] = Enum.KeyCode.R
                                        }
                                    }
                
                                    game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                  
                                end
                                
                              until not lp.Character.HumanoidRootPart.Position:Distance(NPC2.HumanoidRootPart.Position) < dis2 + 0.1 or count == 0
                          end
                        end
                    end
                end
            end) 
        end
      end)

      local sec5 = tab2:Section("Hourly Quests")


  local dropdown = sec5:Dropdown("Hourly Quests", {"Enhanced Arrancar Slayer| 40+ Recommended","The Hollow Thief"},"","Dropdown", function(t)
        getgenv().quest5 = t
      end)
      
      local toggle = sec5:Toggle("AutoHourlyQuest", false,"Toggle", function(a)
        a5 = a
        while a5 do
            pcall(function()  
                if quest5 == "Enhanced Arrancar Slayer| 40+ Recommended" then
                    local objectives = game:GetService("Players")["LocalPlayer"].PlayerGui.HUD.QuestsFrame2["Enhanced Arrancar Slayer"].Frame.Objective.Text
                    for _, enemy in pairs(workspace.Living:GetChildren()) do
                        local enemyName = enemy.Name
                        local obj = objectives:match("Kill [^ ]+ " .. enemyName)
                        if obj then
                            local count = tonumber(obj:match("Kill ([^ ]+) "))
                            if count > 0 then
                                local NPC2 = enemy
                                local lp = game.Players.LocalPlayer
                                repeat task.wait()
                                    local dis2 = distance
                                    local newPos = NPC2.HumanoidRootPart.Position - NPC2.HumanoidRootPart.CFrame.lookVector * dis2
                                    lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC2.HumanoidRootPart.Position)
                                    local args = {
                                        [1] = {
                                            ["inputType"] = Enum.UserInputType.MouseButton1,
                                            ["keyCode"] = Enum.KeyCode.Unknown
                                        }
                                    }
    
                                    if NPC2.Status.Blocking.Value == false then
                                      game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    else
                                      local args = {
                                          [1] = {
                                              ["inputType"] = Enum.UserInputType.MouseButton2,
                                              ["keyCode"] = Enum.KeyCode.Unknown
                                          }
                                      }
                                      game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    end
                                    if lp.Status.Weapon.Value == nil then
                                        local args = {
                                            [1] = {
                                                ["inputType"] = Enum.UserInputType.MouseButton2,
                                                ["keyCode"] = Enum.KeyCode.Unknown
                                            }
                                        }
                                        game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                    elseif NPC2.Status.Blocking.Value == true then
                                      print("blocking")
                                      local args = {
                                          [1] = {
                                              ["inputType"] = Enum.UserInputType.Keyboard,
                                              ["keyCode"] = Enum.KeyCode.R
                                          }
                                      }
                  
                                      game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                    
                                  end
                                  
                                until not lp.Character.HumanoidRootPart.Position:Distance(NPC2.HumanoidRootPart.Position) < dis2 + 0.1 or count == 0
                            end
                        elseif quest5 == "The Hollow Thief" then
                            local objectives = game:GetService("Players")["LocalPlayer"].PlayerGui.HUD.QuestsFrame2["The Hollow Thief"].Frame.Objective.Text
                            for _, enemy in pairs(workspace.Living:GetChildren()) do
                                local enemyName = enemy.Name
                                local obj = objectives:match("Kill [^ ]+ " .. enemyName)
                                if obj then
                                    local count = tonumber(obj:match("Kill ([^ ]+) "))
                                    if count > 0 then
                                        local NPC2 = enemy
                                        local lp = game.Players.LocalPlayer
                                        repeat task.wait()
                                            local dis2 = distance
                                            local newPos = NPC2.HumanoidRootPart.Position - NPC2.HumanoidRootPart.CFrame.lookVector * dis2
                                            lp.Character.HumanoidRootPart.CFrame = CFrame.new(newPos, NPC2.HumanoidRootPart.Position)
                                            local args = {
                                                [1] = {
                                                    ["inputType"] = Enum.UserInputType.MouseButton1,
                                                    ["keyCode"] = Enum.KeyCode.Unknown
                                                }
                                            }
            
                                            if NPC2.Status.Blocking.Value == false then
                                              game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                            else
                                              local args = {
                                                  [1] = {
                                                      ["inputType"] = Enum.UserInputType.MouseButton2,
                                                      ["keyCode"] = Enum.KeyCode.Unknown
                                                  }
                                              }
                                              game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                            end
                                            if lp.Status.Weapon.Value == nil then
                                                local args = {
                                                    [1] = {
                                                        ["inputType"] = Enum.UserInputType.MouseButton2,
                                                        ["keyCode"] = Enum.KeyCode.Unknown
                                                    }
                                                }
                                                game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                                            elseif NPC2.Status.Blocking.Value == true then
                                              print("blocking")
                                              local args = {
                                                  [1] = {
                                                      ["inputType"] = Enum.UserInputType.Keyboard,
                                                      ["keyCode"] = Enum.KeyCode.R
                                                  }
                                              }
                          
                                              game:GetService("ReplicatedStorage").Remotes.Input:FireServer(unpack(args))
                            
                                          end
                                          
                                        until not lp.Character.HumanoidRootPart.Position:Distance(NPC2.HumanoidRootPart.Position) < dis2 + 0.1 or count == 0
                                    end
                                end
                            end
                        end
                    end
                end
                
            end) 
            task.wait(0.1)
        end
    end)


      local sec4 = tab2:Section("Story Quest")

      local dropdown = sec4:Dropdown("Story Quests", {"Yakrus 1+ | Find and speak with Gerald","Zartania | 5+ Kill five Corrupted Reapers","Mijuel 5+ | Kill five corrupted Brutes","Sly_Kage 10+ | Kill three Corrupted Hakuda Students"},"","Dropdown", function(t)
        getgenv().quest3 = t
      end)
      
      local toggle = sec4:Toggle("AutoStoryQuest", false,"Toggle", function(a)
        a4 = a
        while a4 do
            pcall(function()  
                if quest3 == "Yakrus 1+ | Find and speak with Gerald" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").NPCs.Gerald.Head.CFrame
                  wait(1)
                  a4 = false -- stops the toggle
                elseif quest3 == "Zartania | 5+ Kill five Corrupted Reapers" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").NPCs.Zartania.Head.CFrame
                elseif quest3 == "Mijuel 5+ | Kill five corrupted Brutes" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").NPCs.Mijuel.Head.CFrame
                elseif quest3 == "Sly_Kage 10+ | Kill three Corrupted Hakuda Students" then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").NPCs["Sly_Kage"].Head.CFrame
                end
                
            end) 
            task.wait(0.1)
        end
    end)


local tab3 = win:Tab("NPC")

--tab:Section(title <string>)
local sec3 = tab3:Section("Goto NPCS")

local Npc = {}

for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do
    if v.Parent.Name == "NPCs" then
        if not table.find(Npc,tostring(v)) then
            table.insert(Npc,tostring(v))
        end
    end
end


table.sort(Npc)

local dropdown = sec3:Dropdown("Select NPC", Npc,"","Dropdown", function(t)
    getgenv().npc = t
  end)

  sec3:Button("TP", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.workspace.NPCs[npc].HumanoidRootPart.CFrame
end)
